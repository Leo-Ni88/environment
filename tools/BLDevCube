# !/bin/bash

if [ $# -lt 1 ]; then
    echo "Usage: BLDevCube <project> [-b <boot2 path>] [-B <baudrate>] [-B <boot2 path>] [-c <chip name>] [-d <dts path>] [-f <firmware path>] [-p <PT path>] [-P <port>]"
    exit 1
fi

#set default config
PORT="/dev/ttyACM0"
BAUDRATE="2000000"
EXEC_PATH=$(readlink -f ~/tools/bin/bflb_iot_tool)
DEVCUBE_PATH=$(dirname $EXEC_PATH)

if [ "$1" = "acs" ];then
    CHIPNAME="bl616"
    FIRMWARE_PATH="/home/leo/workspace/gitlab/ACS/iot_sdk/out/baseproj/shsdk/bouffalolab/wrover/riscv64-unknown-elf/userdebug/images/app/baseproj-shsdk.bin"
    BOOT2_PATH="/home/leo/workspace/gitlab/ACS/iot_sdk/platform/bouffalolab/tools/flash_tool/baseproj_bootloader.bin"
    PT_PATH="/home/leo/workspace/gitlab/ACS/iot_sdk/platform/bouffalolab/tools/flash_tool/part_8M.toml"
    DTS_PATH="$DEVCUBE_PATH/chips/$CHIPNAME/device_tree/bl_factory_params_IoTKitA_auto.dts"
elif [ "$1" = 'ozt' ];then
    CHIPNAME="bl602"
    FIRMWARE_PATH="/home/leo/workspace/gitlab/OHOS/BL602_HarmonyOS_LTS_1.1.0/out/bl602/bl602_wifiModule/turbox_openHarmony.bin"
    BOOT2_PATH="$DEVCUBE_PATH/chips/$CHIPNAME/builtin_imgs/boot2_isp_bl602_v6.5.4/boot2_isp_release.bin"
    PT_PATH="$DEVCUBE_PATH/chips/$CHIPNAME/partition/partition_cfg_4M.toml"
    DTS_PATH="$DEVCUBE_PATH/chips/$CHIPNAME/device_tree/bl_factory_params_IoTKitA_40M.dts"
elif [ "$1" = 'hf' ];then
    CHIPNAME="bl602"
    FIRMWARE_PATH="/home/leo/workspace/gitlab/bl602_harmony_os/out/bl602/bl602_wifiModule/turbox_openHarmony.bin"
    BOOT2_PATH="$DEVCUBE_PATH/chips/$CHIPNAME/builtin_imgs/boot2_isp_bl602_v6.5.4/boot2_isp_release.bin"
    PT_PATH="$DEVCUBE_PATH/chips/$CHIPNAME/partition/partition_cfg_4M.toml"
    DTS_PATH="$DEVCUBE_PATH/chips/$CHIPNAME/device_tree/bl_factory_params_IoTKitA_40M.dts"
else
    echo "No this project"
fi

shift

show_usage(){
    echo "Usage: BLDevCube <project> [-b <boot2 path>] [-B <baudrate>] [-c <chip name>] [-d <dts path>] [-f <firmware path>] [-p <PT path>] [-P <port>]"
}

# arg parse
while getopts "b:B:c:d:f:p:P:" opt; do
    case $opt in
        b)
            BOOT2_PATH="$OPTARG"
            ;;
        B)
            BAUDRATE="$OPTARG"
            ;;
        c)
            CHIPNAME="$OPTARG"
            ;;
        d)
            DTS_PATH="$OPTARG"
            ;;
        f)
            FIRMWARE_PATH="$OPTARG"
            ;;
        p)
            PT_PATH="$OPTARG"
            ;;
        P)
            PORT="$OPTARG"
            ;;
        \?)
            echo "无效的选项: -$opt" >&2
            show_usage
            exit 1
            ;;
        :)
            echo "选项 -$opt 需要参数" >&2
            show_usage
            exit 1
            ;;
    esac
done

# echo config
echo "\033[32mPlease check config: $CHIPNAME\033[0m"
echo "\033[32mpartition table:  $PT_PATH \033[0m"
echo "\033[32mfirmware:         $FIRMWARE_PATH \033[0m"
echo "\033[32mboot2:            $BOOT2_PATH \033[0m"
echo "\033[32mdts:              $DTS_PATH \033[0m"
echo "\033[32mport:             $PORT \033[0m"
echo "\033[32mbaudrate:         $BAUDRATE \033[0m"

# confirm config
read -p "配置是否正确？(yes/no) " confirm
case $confirm in
    [yY] | yes | YES | Yes)
        ;;
    [nN] | no | NO | No)
        exit 1
        ;;
    *)
        echo "invalid input.Please input y/Y/yes/YES/Yes or n/N/no/NO/No"
        exit 1
        ;;
esac

# flashing
echo "\033[34mbflb_iot_tool --chipname $CHIPNAME --firmware $FIRMWARE_PATH --boot2 $BOOT2_PATH --pt $PT_PATH --dts $DTS_PATH --port $PORT --baudrate $BAUDRATE\033[0m"
bflb_iot_tool --chipname $CHIPNAME --firmware $FIRMWARE_PATH --boot2 $BOOT2_PATH --pt $PT_PATH --dts $DTS_PATH --port $PORT --baudrate $BAUDRATE # ; RETCODE=$?
